{"componentChunkName":"component---src-components-docs-page-js","path":"/docs/getting-started/transport/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"transport\" style=\"position:relative;\"><a href=\"#transport\" aria-label=\"transport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transport</h1>\n<p>The <code class=\"language-text\">GraphQL.Transport</code> namespace contains classes and interfaces that handle the communication between a GraphQL client and server, as well as the serialization and deserialization of GraphQL objects.</p>\n<h2 id=\"graphqlrequest\" style=\"position:relative;\"><a href=\"#graphqlrequest\" aria-label=\"graphqlrequest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQLRequest</h2>\n<p><code class=\"language-text\">GraphQLRequest</code> is a class that represents a <a href=\"https://github.com/graphql/graphql-over-http/blob/master/spec/GraphQLOverHTTP.md#request\"><em>GraphQL-over-HTTP request</em></a> sent by client. It contains the following properties:</p>\n<ul>\n<li><code class=\"language-text\">OperationName</code> - (Optional, string): The name of the Operation in the Document to execute.</li>\n<li><code class=\"language-text\">Query</code> - (Required, string): The string representation of the Source Text of a GraphQL Document as specified in the Language section of the GraphQL specification.</li>\n<li><code class=\"language-text\">Variables</code> - (Optional, Inputs): Values for any Variables defined by the Operation.</li>\n<li><code class=\"language-text\">Extensions</code> - (Optional, Inputs): This entry is reserved for implementors to extend the protocol however they see fit.</li>\n</ul>\n<p><strong>Note:</strong> the <em>Query</em> property can be null in case of <a href=\"https://www.apollographql.com/docs/apollo-server/performance/apq/\">persisted queries</a> when a client sends only SHA-256 hash of the query in <em>Extensions</em> given that corresponding key-value pair has been saved on a server beforehand</p>\n<h2 id=\"operationmessage\" style=\"position:relative;\"><a href=\"#operationmessage\" aria-label=\"operationmessage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OperationMessage</h2>\n<p><code class=\"language-text\">OperationMessage</code> represents a message typically used by the <a href=\"https://the-guild.dev/graphql/ws\">GraphQL-WS</a> or  <a href=\"https://github.com/apollographql/subscriptions-transport-ws/blob/master/PROTOCOL.md\">graphql-transport-ws</a> WebSockets-based protocols.\nBoth of these protocols are used by the <a href=\"https://www.apollographql.com/docs/react/\">Apollo Client</a> library. The message contains the following properties:</p>\n<ul>\n<li>\n<p>Id - (Optional, string): The id of the message.</p>\n</li>\n<li>\n<p>Type - (Required, string): The type of the message. Can be one of the following:</p>\n<h4 id=\"graphql-ws\" style=\"position:relative;\"><a href=\"#graphql-ws\" aria-label=\"graphql ws permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL-WS</h4>\n<ul>\n<li><code class=\"language-text\">connection_init</code> - Client -> Server. Client sends this message to initialize the connection.</li>\n<li><code class=\"language-text\">connection_ack</code> - Server -> Client. Server sends this message to acknowledge the connection.</li>\n<li><code class=\"language-text\">error</code> - Server -> Client. Server sends this message to indicate that an error occurred.</li>\n<li><code class=\"language-text\">ping</code> - Bidirectional. Client or Server sends this message to keep the connection alive.</li>\n<li><code class=\"language-text\">pong</code> - Bidirectional. Client or Server sends this message to keep the connection alive.</li>\n<li><code class=\"language-text\">subscribe</code> - Client -> Server. Client sends this message to subscribe to a GraphQL subscription.</li>\n<li><code class=\"language-text\">next</code> - Server -> Client. Server sends this message to indicate that a new value has been received for a GraphQL subscription.</li>\n<li><code class=\"language-text\">complete</code> - Bidirectional. This message indicate that the GraphQL subscription has completed.</li>\n</ul>\n<h4 id=\"graphql-transport-ws\" style=\"position:relative;\"><a href=\"#graphql-transport-ws\" aria-label=\"graphql transport ws permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>graphql-transport-ws</h4>\n<ul>\n<li><code class=\"language-text\">connection_init</code> - Client -> Server. Client sends this message to initialize the connection.</li>\n<li><code class=\"language-text\">connection_ack</code> - Server -> Client. Server sends this message to acknowledge the connection.</li>\n<li><code class=\"language-text\">connection_error</code> - Server -> Client. Server sends this message to indicate that an error occurred while establishing the connection.</li>\n<li><code class=\"language-text\">ka</code> - Server -> Client. Server sends this message periodically to keep the client connection alive.</li>\n<li><code class=\"language-text\">connection_terminate</code> - Client -> Server. Client sends this message to terminate the connection.</li>\n<li><code class=\"language-text\">start</code> - Client -> Server. Client sends this message to start a GraphQL operation.</li>\n<li><code class=\"language-text\">data</code> - Server -> Client. Server sends this message to send the GraphQL execution result.</li>\n<li><code class=\"language-text\">error</code> - Server -> Client. Server sends this message to indicate that an error occurred during the GraphQL operation.</li>\n<li><code class=\"language-text\">complete</code> - Server -> Client. Server sends this message to indicate that the GraphQL operation is complete.</li>\n<li><code class=\"language-text\">stop</code> - Client -> Server. Client sends this message to stop a running GraphQL operation.</li>\n</ul>\n</li>\n<li>\n<p>Payload - (Optional, object): The payload of the message. It is typically a <code class=\"language-text\">GraphQLRequest</code> or <code class=\"language-text\">ExecutionResult</code> instance depending on the message type.</p>\n</li>\n</ul>\n<p><strong>Note:</strong> As mentioned in <a href=\"https://www.apollographql.com/docs/react/data/subscriptions/#websocket-setup\">Apollo Client</a> documentation, the <em>graphql-transport-ws</em> is a legacy protocol and should not be used in new applications. The <em>GraphQL-WS</em> protocol is the recommended protocol to use.</p>\n<h2 id=\"igraphqlserializer--igraphqltextserializer\" style=\"position:relative;\"><a href=\"#igraphqlserializer--igraphqltextserializer\" aria-label=\"igraphqlserializer  igraphqltextserializer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IGraphQLSerializer &#x26; IGraphQLTextSerializer</h2>\n<p>Serialize and deserialize object hierarchies to/from a <code class=\"language-text\">Stream</code> and <code class=\"language-text\">string</code> respectively. Should include special support for <code class=\"language-text\">ExecutionResult</code> , <code class=\"language-text\">Inputs</code> and transport-specific classes as necessary. GraphQL.NET provides <code class=\"language-text\">Newtonsoft.Json</code> and <code class=\"language-text\">System.Text.Json</code> as default implementations of these interfaces.</p>\n<p>Simple example of <code class=\"language-text\">System.Text.Json</code> serializer in an ASP.Net Core controller is shown below:</p>\n<p><em>Program.cs</em></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQL</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span><span class=\"token function\">AddSystemTextJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        options<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddSchema</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FooSchema<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Controller.cs</em></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">GraphQLController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ISchema</span> schema<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IDocumentExecuter</span> executer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IGraphQLTextSerializer</span> serializer<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _schema <span class=\"token operator\">=</span> schema<span class=\"token punctuation\">;</span>\n        _executer <span class=\"token operator\">=</span> executer<span class=\"token punctuation\">;</span>\n        _serializer <span class=\"token operator\">=</span> serializer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpPost</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>IActionResult<span class=\"token punctuation\">></span></span> <span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">FromBody</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">GraphQLRequest</span> query<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _executer<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteAsync</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span>\n            <span class=\"token punctuation\">{</span>\n                options<span class=\"token punctuation\">.</span>Schema <span class=\"token operator\">=</span> _schema<span class=\"token punctuation\">;</span>\n                options<span class=\"token punctuation\">.</span>Query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>Query<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ConfigureAwait</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Response<span class=\"token punctuation\">.</span>StatusCode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>Executed <span class=\"token punctuation\">?</span> HttpStatusCode<span class=\"token punctuation\">.</span>OK <span class=\"token punctuation\">:</span> HttpStatusCode<span class=\"token punctuation\">.</span>BadRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Content</span><span class=\"token punctuation\">(</span>_serializer<span class=\"token punctuation\">.</span><span class=\"token function\">Serialize</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/graphql-response+json\"</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","fields":{"relativePath":"docs/getting-started/transport.md"}},"site":{"siteMetadata":{"githubEditUrl":"https://github.com/graphql-dotnet/graphql-dotnet/edit/master/docs2/site"}}},"pageContext":{"relativePath":"docs/getting-started/transport.md"}},"staticQueryHashes":["3402777086"],"slicesMap":{}}