{"componentChunkName":"component---src-components-docs-page-js","path":"/docs/analyzers/gql009_useasyncresolver/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"gql009-use-async-resolver\" style=\"position:relative;\"><a href=\"#gql009-use-async-resolver\" aria-label=\"gql009 use async resolver permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GQL009: Use async resolver</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Rule ID</strong></td>\n<td>GQL009</td>\n</tr>\n<tr>\n<td><strong>Category</strong></td>\n<td>Usage</td>\n</tr>\n<tr>\n<td><strong>Default severity</strong></td>\n<td>Error</td>\n</tr>\n<tr>\n<td><strong>Enabled by default</strong></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><strong>Code fix provided</strong></td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"cause\" style=\"position:relative;\"><a href=\"#cause\" aria-label=\"cause permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cause</h2>\n<p>This rule triggers when the sync version of the <code class=\"language-text\">Resolve</code> or <code class=\"language-text\">ResolveScoped</code>\nmethods is used with awaitable delegate.</p>\n<h2 id=\"rule-description\" style=\"position:relative;\"><a href=\"#rule-description\" aria-label=\"rule description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rule description</h2>\n<p><code class=\"language-text\">ResolveAsync</code> and <code class=\"language-text\">ResolveScopedAsync</code> methods should be used to register\nawaitable delegates. The most common awaitable types are\n<code class=\"language-text\">System.Threading.Tasks.Task</code> and <code class=\"language-text\">System.Threading.Tasks.ValueTask</code>, but any\ntype that defines a valid <code class=\"language-text\">GetAwaiter()</code> method, which returns a valid awaiter\nwith a <code class=\"language-text\">GetResult()</code> method is considered awaitable and is detected by the\nanalyzer.<br>\nThe rule is useful when <code class=\"language-text\">FieldBuilder</code> is defined without return type argument\nor the return type argument is defined as <code class=\"language-text\">object</code> or <code class=\"language-text\">dynamic</code> and compiler\nallows returning <code class=\"language-text\">Task&lt;T></code> and other awaitables from the delegate.</p>\n<h2 id=\"how-to-fix-violations\" style=\"position:relative;\"><a href=\"#how-to-fix-violations\" aria-label=\"how to fix violations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to fix violations</h2>\n<p>Replace the sync <code class=\"language-text\">Resolve</code> or <code class=\"language-text\">ResolveScoped</code> method with matching async version\nand await the delegate when needed.</p>\n<h2 id=\"example-of-a-violation\" style=\"position:relative;\"><a href=\"#example-of-a-violation\" aria-label=\"example of a violation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example of a violation</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public class MyGraphType : ObjectGraphType&lt;Person&gt;\n{\n    public MyGraphType()\n    {\n        // 1. no return type defined\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;)\n            .Resolve(ctx =&gt; Task.FromResult(&quot;developer&quot;));\n\n        // 2. the method returns ValueTask&lt;T&gt;\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;)\n            .Resolve(ctx =&gt; GetTitleAsync());\n\n        // 3. method group, return type defined in Field method\n        Field&lt;StringGraphType, object&gt;(&quot;Title&quot;)\n            .Resolve(ResolveTitleAsync);\n\n        // 4. field builder created with awaitable return type\n        Field&lt;StringGraphType, Task&lt;string&gt;&gt;(&quot;Title&quot;)\n            .ResolveScoped(ctx =&gt; Task.FromResult(&quot;developer&quot;));\n\n        // 5. the method returns ValueTask&lt;T&gt;\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;)\n            .ResolveScoped(ctx =&gt; GetTitleAsync());\n\n        // 6. object or dynamic is used as return type in Returns method\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;).Returns&lt;dynamic&gt;()\n            .ResolveScoped(ctx =&gt; ResolveTitleAsync(ctx));\n    }\n\n    private ValueTask&lt;string&gt; GetTitleAsync() =&gt; ValueTask.FromResult(&quot;developer&quot;);\n\n    private Task&lt;string&gt; ResolveTitleAsync(IResolveFieldContext&lt;Person&gt; ctx) =&gt;\n        Task.FromResult(&quot;developer&quot;);\n}</code></pre></div>\n<h2 id=\"example-of-how-to-fix\" style=\"position:relative;\"><a href=\"#example-of-how-to-fix\" aria-label=\"example of how to fix permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example of how to fix</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public class MyGraphType : ObjectGraphType&lt;Person&gt;\n{\n    public MyGraphType()\n    {\n        // 1. no return type defined\n        //    await the delegate\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;)\n            .ResolveAsync(async ctx =&gt; await Task.FromResult(&quot;developer&quot;));\n\n        // 2. the method returns ValueTask&lt;T&gt;\n        //    await the delegate\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;)\n            .ResolveAsync(async ctx =&gt; await GetTitleAsync());\n\n        // 3. method group, return type defined in Field method\n        //    await the delegate\n        Field&lt;StringGraphType, object&gt;(&quot;Title&quot;)\n            .ResolveAsync(async ctx =&gt; await ResolveTitleAsync(ctx));\n\n        // 4. field builder created with awaitable return type\n        //    unwrap the return type\n        Field&lt;StringGraphType, string&gt;(&quot;Title&quot;)\n            .ResolveScopedAsync(ctx =&gt; Task.FromResult(&quot;developer&quot;));\n\n        // 5. the method returns ValueTask&lt;T&gt;\n        //    await the delegate and defined the return type\n        Field&lt;StringGraphType, string&gt;(&quot;Title&quot;)\n            .ResolveScopedAsync(async ctx =&gt; await GetTitleAsync());\n\n        // 6. object or dynamic is used as return type in Returns method\n        //    await the delegate and define the source type and return type\n        //    on the ResolveScopedAsync method\n        Field&lt;StringGraphType&gt;(&quot;Title&quot;).Returns&lt;dynamic&gt;()\n            .ResolveScopedAsync&lt;Person, dynamic&gt;(async ctx =&gt;\n                await ResolveTitleAsync(ctx));\n    }\n\n    private ValueTask&lt;string&gt; GetTitleAsync() =&gt; ValueTask.FromResult(&quot;developer&quot;);\n\n    private Task&lt;string&gt; ResolveTitleAsync(IResolveFieldContext&lt;Person&gt; ctx) =&gt;\n        Task.FromResult(&quot;developer&quot;);\n}</code></pre></div>\n<h2 id=\"suppress-a-warning\" style=\"position:relative;\"><a href=\"#suppress-a-warning\" aria-label=\"suppress a warning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Suppress a warning</h2>\n<p>If you just want to suppress a single violation, add preprocessor directives to\nyour source file to disable and then re-enable the rule.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> warning disable GQL009</span>\n<span class=\"token comment\">// The code that's violating the rule is on this line.</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">pragma</span> warning restore GQL009</span></code></pre></div>\n<p>To disable the rule for a file, folder, or project, set its severity to <code class=\"language-text\">none</code>\nin the\n<a href=\"https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-files\">configuration file</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">*.cs</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">dotnet_diagnostic.GQL009.severity</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">none</span></code></pre></div>\n<p>For more information, see\n<a href=\"https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/suppress-warnings\">How to suppress code analysis warnings</a>.</p>\n<h2 id=\"related-rules\" style=\"position:relative;\"><a href=\"#related-rules\" aria-label=\"related rules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related rules</h2>","fields":{"relativePath":"docs/analyzers/GQL009_UseAsyncResolver.md"}},"site":{"siteMetadata":{"githubEditUrl":"https://github.com/graphql-dotnet/graphql-dotnet/edit/master/docs2/site"}}},"pageContext":{"relativePath":"docs/analyzers/GQL009_UseAsyncResolver.md"}},"staticQueryHashes":["3402777086"],"slicesMap":{}}