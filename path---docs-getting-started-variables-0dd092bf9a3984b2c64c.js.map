{"version":3,"sources":["webpack:///path---docs-getting-started-variables-0dd092bf9a3984b2c64c.js","webpack:///./.cache/json/docs-getting-started-variables.json"],"names":["webpackJsonp","336","module","exports","data","markdownRemark","html","fields","relativePath","site","siteMetadata","githubEditUrl","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6uIAA44IC,QAA8CC,aAAA,sCAAoDC,MAASC,cAAgBC,cAAA,6EAA4FC,aAAgBJ,aAAA","file":"path---docs-getting-started-variables-0dd092bf9a3984b2c64c.js","sourcesContent":["webpackJsonp([44712706562510],{\n\n/***/ 336:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"variables\\\"><a href=\\\"#variables\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Variables</h1>\\n<p>You can pass variables received from the client to the execution engine by using the <code class=\\\"language-text\\\">Inputs</code> property.</p>\\n<blockquote>\\n<p>See the <a href=\\\"http://graphql.org/learn/queries/#variables\\\">official GraphQL documentation on variables</a></p>\\n</blockquote>\\n<p>Here is what a query looks like with a variable:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\"><span class=\\\"token keyword\\\">query</span> <span class=\\\"token definition-query function\\\">DroidQuery</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$droidId</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token scalar\\\">String</span><span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property-query\\\">droid</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">id</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$droidId</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">id</span>\\n    <span class=\\\"token property\\\">name</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Here is what this query would look like as a JSON request:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token property\\\">\\\"query\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"query DroidQuery($droidId: String!) { droid(id: $droidId) { id name } }\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n <span class=\\\"token property\\\">\\\"variables\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token property\\\">\\\"droidId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1\\\"</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Call <code class=\\\"language-text\\\">.ToInputs()</code> to translate JSON variables into a format that the library can work with.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"csharp\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\"><span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">var</span></span> variablesJson <span class=\\\"token operator\\\">=</span> <span class=\\\"token comment\\\">// get from request</span>\\n<span class=\\\"token comment\\\">// `ToInputs` extension method converts the json to the `Inputs` class</span>\\n<span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">var</span></span> inputs <span class=\\\"token operator\\\">=</span> variablesJson<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ToInputs</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">await</span> schema<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ExecuteAsync</span><span class=\\\"token punctuation\\\">(</span>_ <span class=\\\"token operator\\\">=></span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  _<span class=\\\"token punctuation\\\">.</span>Query <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"...\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  _<span class=\\\"token punctuation\\\">.</span>Inputs <span class=\\\"token operator\\\">=</span> inputs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\",\"fields\":{\"relativePath\":\"docs/getting-started/variables.md\"}},\"site\":{\"siteMetadata\":{\"githubEditUrl\":\"https://github.com/graphql-dotnet/graphql-dotnet/edit/master/docs2/site\"}}},\"pathContext\":{\"relativePath\":\"docs/getting-started/variables.md\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-getting-started-variables-0dd092bf9a3984b2c64c.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"variables\\\"><a href=\\\"#variables\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Variables</h1>\\n<p>You can pass variables received from the client to the execution engine by using the <code class=\\\"language-text\\\">Inputs</code> property.</p>\\n<blockquote>\\n<p>See the <a href=\\\"http://graphql.org/learn/queries/#variables\\\">official GraphQL documentation on variables</a></p>\\n</blockquote>\\n<p>Here is what a query looks like with a variable:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\"><span class=\\\"token keyword\\\">query</span> <span class=\\\"token definition-query function\\\">DroidQuery</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$droidId</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token scalar\\\">String</span><span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property-query\\\">droid</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">id</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$droidId</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">id</span>\\n    <span class=\\\"token property\\\">name</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Here is what this query would look like as a JSON request:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token property\\\">\\\"query\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"query DroidQuery($droidId: String!) { droid(id: $droidId) { id name } }\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n <span class=\\\"token property\\\">\\\"variables\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token property\\\">\\\"droidId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"1\\\"</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Call <code class=\\\"language-text\\\">.ToInputs()</code> to translate JSON variables into a format that the library can work with.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"csharp\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\"><span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">var</span></span> variablesJson <span class=\\\"token operator\\\">=</span> <span class=\\\"token comment\\\">// get from request</span>\\n<span class=\\\"token comment\\\">// `ToInputs` extension method converts the json to the `Inputs` class</span>\\n<span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">var</span></span> inputs <span class=\\\"token operator\\\">=</span> variablesJson<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ToInputs</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">await</span> schema<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ExecuteAsync</span><span class=\\\"token punctuation\\\">(</span>_ <span class=\\\"token operator\\\">=></span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  _<span class=\\\"token punctuation\\\">.</span>Query <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"...\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  _<span class=\\\"token punctuation\\\">.</span>Inputs <span class=\\\"token operator\\\">=</span> inputs<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\",\"fields\":{\"relativePath\":\"docs/getting-started/variables.md\"}},\"site\":{\"siteMetadata\":{\"githubEditUrl\":\"https://github.com/graphql-dotnet/graphql-dotnet/edit/master/docs2/site\"}}},\"pathContext\":{\"relativePath\":\"docs/getting-started/variables.md\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-getting-started-variables.json\n// module id = 336\n// module chunks = 44712706562510"],"sourceRoot":""}